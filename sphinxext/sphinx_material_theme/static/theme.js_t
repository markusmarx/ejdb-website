window.DOCUMENTATION_OPTIONS = {
    URL_ROOT : '{{ url_root }}',
    VERSION : '{{ release|e }}',
    COLLAPSE_INDEX : false,
    FILE_SUFFIX : '{{ "" if no_search_suffix else file_suffix }}',
    HAS_SOURCE : '{{ has_source|lower }}' === 'true'
};

/*
 * jQuery appear plugin
 *
 * Copyright (c) 2012 Andrey Sidorov
 * licensed under MIT license.
 *
 * https://github.com/morr/jquery.appear/
 *
 * Version: 0.3.4
 */
(function($) {
    var selectors = [];

    var check_binded = false;
    var check_lock = false;
    var defaults = {
        interval : 250,
        force_process : false
    };
    var $window = $(window);

    var $prior_appeared;

    function process() {
        check_lock = false;
        for (var index = 0, selectorsLength = selectors.length; index < selectorsLength; index++) {
            var $appeared = $(selectors[index]).filter(function() {
                return $(this).is(':appeared');
            });

            $appeared.trigger('appear', [$appeared]);

            if ($prior_appeared) {
                var $disappeared = $prior_appeared.not($appeared);
                $disappeared.trigger('disappear', [$disappeared]);
            }
            $prior_appeared = $appeared;
        }
    }

    // "appeared" custom filter
    $.expr[':']['appeared'] = function(element) {
        var $element = $(element);
        if (!$element.is(':visible')) {
            return false;
        }

        var window_left = $window.scrollLeft();
        var window_top = $window.scrollTop();
        var offset = $element.offset();
        var left = offset.left;
        var top = offset.top;

        if (top + $element.height() >= window_top &&
                top - ($element.data('appear-top-offset') || 0) <= window_top + $window.height() &&
                left + $element.width() >= window_left &&
                left - ($element.data('appear-left-offset') || 0) <= window_left + $window.width()) {
            return true;
        } else {
            return false;
        }
    };

    $.fn.extend({
        // watching for element's appearance in browser viewport
        appear : function(options) {
            var opts = $.extend({}, defaults, options || {});
            var selector = this.selector || this;
            if (!check_binded) {
                var on_check = function() {
                    if (check_lock) {
                        return;
                    }
                    check_lock = true;
                    setTimeout(process, opts.interval);
                };

                $(window).scroll(on_check).resize(on_check);
                check_binded = true;
            }
            if (opts.force_process) {
                setTimeout(process, opts.interval);
            }
            selectors.push(selector);
            return $(selector);
        }
    });

    $.extend({
        // force elements's appearance check
        force_appear : function() {
            if (check_binded) {
                process();
                return true;
            }
            ;
            return false;
        }
    });
})(jQuery);


jQuery(function() {

    initCSS();
    initMaterialize();
    initTopNav();
    initSideNav();
    initRelNav();


    function initCSS() {
        $("table.docutils").each(function() {
            var $this = $(this);
            if (!$this.hasClass("footnote") && !$this.hasClass("citation")) { //skip footnote/citation tables
                $this.addClass("bordered hoverable");
            }
        });
    }

    function initMaterialize() {
        $(".button-collapse").sideNav();
        $(".dropdown-button").dropdown({'hover' : false});
        $("select").not(".disabled").material_select();
    }

    function initTopNav() {
        $("a#toggle-search").click(function() {
            var el = $("div#search");
            el.is(":visible") ? el.slideUp() : el.slideDown(function() {
                el.find("input").focus();
            });
            return false;
        });
    }

    function initSideNav() {
        var res = $("#sidetoc");
        var tlfirst = false;
        res.find("> ul > li").each(function() {
            var $this = $(this);
            var $children = $this.children();
            if ($children.length < 2) {
                $children.first().parent("li").addClass("mt-toclink");
                if (!tlfirst) {
                    $children.first().parent("li").addClass("mt-first");
                    tlfirst = true;
                }
                return;
            }
            tlfirst = false;
            var $aEl = $children.first();
            /*$aEl.click(function(e) {
             e.preventDefault();
             window.setTimeout(function() {
             var href = $(e.delegateTarget).attr("href");
             if (href != null) {
             window.location.href = href;
             }
             }, 300);
             });*/

            var $uEl = $children.next();
            if ($aEl.parent().hasClass("current")) {
                $aEl.addClass("active");
            }
            //$aEl.addClass("collapsible-header waves-effect waves-teal z-depth-1");
            $aEl.addClass("collapsible-header z-depth-1");
            $uEl.addClass("collapsible-body");
        });
        res = res.find("> ul");

        var sidebar = $("#sidebar");
        var pageContent = $("#page-content-block");
        if (sidebar.length) {
            pageContent.css({"min-height" : sidebar.height() + "px"});
            new ResizeSensor(sidebar[0], function() {
                pageContent.css({"min-height" : (window.innerWidth <= 601 ? 0 : sidebar.height()) + "px"});
            });
        } else {
            pageContent.css({"min-height" : 0 + "px"});
        }
        res.collapsible();
        res.each(function() {
            var $this = $(this);
            $this.off("click.collapse", ".collapsible-header");
            $this.find("> li > .collapsible-header").off("click.collapse");
        });
    }

    function initRelNav() {
        var topRel = $("#page-content-block").find("> .rel-nav");
        var bottomRel = $("#bottom-rel-placeholder");
        topRel.appear({
            interval : 100,
            force_process : true
        });
        bottomRel.hide();

        topRel.on("disappear", function() {
            bottomRel.show();
        });

        topRel.on("appear", function() {
            bottomRel.hide();
        });
    }

});




